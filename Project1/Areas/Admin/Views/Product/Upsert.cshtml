@model ProductVM

<form method="post" enctype="multipart/form-data">
    <div class="border p-3 mt-3 mb-5">
        <div class="row pb-2">
            <h2> @(Model.Product.Id!=0?"Update":"Create") Product</h2>
            <hr />
        </div>
        <div class="mb-3 p-1">
            <div class="mb-3 row">
            <div asp-validation-summary="All"></div>
            <label class="p0" asp-for="Product.Title"></label>
                <input asp-for="Product.Title" class="form-control" />
                <span asp-validation-for="Product.Title" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.ISBN"></label>
                <input asp-for="Product.ISBN" class="form-control" />
                <span asp-validation-for="Product.ISBN" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.Author"></label>
                <input asp-for="Product.Author" class="form-control" />
                <span asp-validation-for="Product.Author" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.Description"></label>
                <textarea asp-for="Product.Description" class="form-control"></textarea>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.ListPrice"></label>
                <input asp-for="Product.ListPrice" class="form-control" />
                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.Price"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.Price50"></label>
                <input asp-for="Product.Price50" class="form-control" />
                <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.Price100"></label>
                <input asp-for="Product.Price100" class="form-control" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.CategoryId"></label>
                <select asp-for="Product.CategoryId" asp-items="@Model.CategoryLists" class="form-select">
                    <option disabled selected>---Select Category---</option>
                </select>
                <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>
            <div class="mb-3 row">
                <label class="pt-2" asp-for="Product.ImageURL"></label>
                <input type="file" name="file" asp-for="Product.ImageURL" class="form-control" />
                <span asp-validation-for="Product.ImageURL" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="col-6 col-md-3">
                @if(Model.Product.Id!=0)
                {
                    <button type="submit" class="btn btn-success form-control">Update</button>
                }
                else
                {
                    <button type="submit" class="btn btn-success form-control">Create</button>
                }
            </div>
            <div class="col-6 col-md-3">
                <a class="btn btn-dark form-control" asp-controller="Product" asp-action="Index">
                    Back To List
                </a>
            </div>
        </div>


    </div>
</form>
@section scripts
{
    @{
        <partial name="_ValidationScriptsPartial" />
        <script>
            tinymce.init({
              selector: 'textarea',
              plugins: [
                // Core editing features
                'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
                // Your account includes a free trial of TinyMCE premium features
                // Try the most popular premium features until Aug 21, 2025:
                'checklist', 'mediaembed', 'casechange', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'advtemplate', 'ai', 'uploadcare', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
              ],
              toolbar: 'undo redo | blocks fontfamily fontsize  link media table mergetags  align lineheight | checklist numlist bullist indent outdent ',
              tinycomments_mode: 'embedded',
              tinycomments_author: 'Author name',
              mergetags_list: [
                { value: 'First.Name', title: 'First Name' },
                { value: 'Email', title: 'Email' },
              ],
              ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
              uploadcare_public_key: '1b4dbd9788203fe6a76b',
            });
        </script>
    }
}